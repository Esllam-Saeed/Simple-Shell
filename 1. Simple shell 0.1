#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>

int main() {
    char input[1024];
    char* argv[2];
    int status;

    while (1) {
        printf("#cisfun$ ");
        if (fgets(input, sizeof(input), stdin) == NULL) {
            break;
        }

        // Remove trailing newline character
        input[strcspn(input, "\n")] = '\0';

        argv[0] = input;
        argv[1] = NULL;

        pid_t pid = fork();

        if (pid == -1) {
            perror("fork() failed");
            exit(EXIT_FAILURE);
        } else if (pid == 0) {
            // Child process
            execve(argv[0], argv, NULL);
            // execve only returns if an error occurred
            perror("execve() failed");
            exit(EXIT_FAILURE);
        } else {
            // Parent process
            wait(&status);
            if (WIFEXITED(status) && WEXITSTATUS(status) != 0) {
                printf("Command failed with exit code %d\n", WEXITSTATUS(status));
            }
        }
    }

    printf("\n");
    return 0;
}
